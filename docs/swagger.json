{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple movie library server.",
        "title": "Philmotecha API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/add_actor": {
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "add by json actor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Add an actor",
                "parameters": [
                    {
                        "description": "Add actor",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CreateActorParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Actor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/add_movie": {
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "add by json movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Add an movie",
                "parameters": [
                    {
                        "description": "Add movie",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.NewMovieParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Movie"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/add_user": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add an user",
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Appuser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/delete_actor/{id}": {
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Delete by json actor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Delete an actor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/delete_movie/{id}": {
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Delete by json movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Delete an movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/list_actors": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "get actors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "List actors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.DetailedActor"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/list_movies": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "get movies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "List movies",
                "parameters": [
                    {
                        "enum": [
                            "desc",
                            "asc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort direction",
                        "name": "sort_type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "rating",
                            "title",
                            "date"
                        ],
                        "type": "string",
                        "default": "rating",
                        "description": "Sort property",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Actor"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "login user using password and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login an user",
                "parameters": [
                    {
                        "description": "Login user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Search by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Search lookup by fragment of movie's name or fragment of actor's name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search by query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Movie"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/update_actor/{id}": {
            "patch": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Update actor by json payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actors"
                ],
                "summary": "Update an actor",
                "parameters": [
                    {
                        "description": "Update actor",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ActorPayload"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/update_movie/{id}": {
            "patch": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Update by json movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update a movie",
                "parameters": [
                    {
                        "description": "Update movie",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MoviePayload"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ActorMovie": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "plot": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.ActorPayload": {
            "type": "object",
            "properties": {
                "birth": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/db.GenderType"
                },
                "name": {
                    "type": "string",
                    "example": "Daryl Dixon"
                }
            }
        },
        "api.AuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "api.DetailedActor": {
            "type": "object",
            "properties": {
                "birth": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/db.GenderType"
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ActorMovie"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.MoviePayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Boring movie about planets"
                },
                "rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "release_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1,
                    "example": "Inception"
                }
            }
        },
        "api.NewMovieParams": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Boring movie about planets"
                },
                "rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "release_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1,
                    "example": "Inception"
                }
            }
        },
        "api.ServerError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.UserPayload": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "db.Actor": {
            "type": "object",
            "properties": {
                "birth": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/db.GenderType"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.Appuser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/db.UserRole"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "db.CreateActorParams": {
            "type": "object",
            "properties": {
                "birth": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/db.GenderType"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.GenderType": {
            "type": "string",
            "enum": [
                "male",
                "female",
                "arch"
            ],
            "x-enum-varnames": [
                "GenderTypeMale",
                "GenderTypeFemale",
                "GenderTypeArch"
            ]
        },
        "db.Movie": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "release_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "user"
            ],
            "x-enum-varnames": [
                "UserRoleAdmin",
                "UserRoleUser"
            ]
        }
    },
    "securityDefinitions": {
        "JwtAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}